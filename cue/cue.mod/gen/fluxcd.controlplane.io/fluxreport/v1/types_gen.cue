// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f https://github.com/controlplaneio-fluxcd/flux-operator/releases/download/v0.22.0/install.yaml

package v1

import "strings"

// FluxReport is the Schema for the fluxreports API.
#FluxReport: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "fluxcd.controlplane.io/v1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "FluxReport"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// FluxReportSpec defines the observed state of a Flux
	// installation.
	spec!: #FluxReportSpec
}

// FluxReportSpec defines the observed state of a Flux
// installation.
#FluxReportSpec: {
	// Cluster is the version information of the Kubernetes cluster.
	cluster?: {
		// Nodes is the number of nodes in the Kubernetes cluster.
		nodes?: int

		// Platform is the os/arch of the Kubernetes control plane.
		platform?: string

		// ServerVersion is the version of the Kubernetes API server.
		serverVersion?: string
	}

	// ComponentsStatus is the status of the Flux controller
	// deployments.
	components?: [...{
		// Image is the container image of the Flux component.
		image!: string

		// Name is the name of the Flux component.
		name!: string

		// Ready is the readiness status of the Flux component.
		ready!: bool

		// Status is a human-readable message indicating details
		// about the Flux component observed state.
		status!: string
	}]

	// Distribution is the version information of the Flux
	// installation.
	distribution!: {
		// Entitlement is the entitlement verification status.
		entitlement!: string

		// ManagedBy is the name of the operator managing the Flux
		// instance.
		managedBy?: string

		// Status is a human-readable message indicating details
		// about the distribution observed state.
		status!: string

		// Version is the version of the Flux instance.
		version?: string
	}

	// ReconcilersStatus is the list of Flux reconcilers and
	// their statistics grouped by API kind.
	reconcilers?: [...{
		// APIVersion is the API version of the Flux resource.
		apiVersion!: string

		// Kind is the kind of the Flux resource.
		kind!: string

		// Stats is the reconcile statics of the Flux resource kind.
		stats?: {
			// Failing is the number of reconciled
			// resources in the Failing state.
			failing!: int

			// Running is the number of reconciled
			// resources in the Running state.
			running!: int

			// Suspended is the number of reconciled
			// resources in the Suspended state.
			suspended!: int

			// TotalSize is the total size of the artifacts in storage.
			totalSize?: string
		}
	}]

	// SyncStatus is the status of the cluster sync
	// Source and Kustomization resources.
	sync?: {
		// ID is the identifier of the sync.
		id!: string

		// Path is the kustomize path of the sync.
		path?: string

		// Ready is the readiness status of the sync.
		ready!: bool

		// Source is the URL of the source repository.
		source?: string

		// Status is a human-readable message indicating details
		// about the sync observed state.
		status!: string
	}
}
